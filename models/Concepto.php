<?php
  namespace Models;

  use Models\ModelBase as ModelBase;

  class Concepto extends ModelBase {

    /**
     * @var int
    */
    public $id;

    /**
     * @var string
    */
    public $familia;

    /**
     * @var string
    */
    public $descripcion;

    /**
     * @var string
    */
    public $unidad;

    /**
     * @var float
    */
    public $precioUnitario;

    /**
     * @var int
    */
    public $cantidad;

    // id
    public function getId() {
      return $this -> id;
    }

    public function setId($id) {
      $this -> id = $id;
    }

    // familia
    public function getFamilia() {
        return $this -> familia;
    }

    public function setFamilia($familia) {
        $this -> familia = $this -> db -> real_escape_string(strtoupper($familia));
    }

    // descripcion
    public function getDescripcion() {
      return $this -> descripcion;
    }

    public function setDescripcion($descripcion) {
      $this -> descripcion = $this -> db -> real_escape_string($descripcion);
    }

    // unidad
    public function setUnidad($unidad) {
      $this -> unidad = $this -> db -> real_escape_string($unidad);
    }

    public function getUnidad() {
      return $this -> unidad;
    }

    // precioUnitario
    public function getPrecioUnitario() {
      return $this -> precioUnitario;
    }

    public function setPrecioUnitario($precioUnitario) {
      $this -> precioUnitario = filter_var($precioUnitario, FILTER_VALIDATE_FLOAT, ['flags' => FILTER_SANITIZE_NUMBER_FLOAT|FILTER_FLAG_ALLOW_THOUSAND]);
    }

    // cantidad
    public function getCantidad() {
      return $this -> cantidad;
    }

    public function setCantidad($cantidad) {
      $this -> cantidad = filter_var($cantidad, FILTER_VALIDATE_FLOAT, ['flags' => FILTER_SANITIZE_NUMBER_FLOAT|FILTER_FLAG_ALLOW_THOUSAND]);
    }

    /**
    * --------------------------------------------------------------------------
    * CURRENT PRESUPUESTO OPERATIONS
    * --------------------------------------------------------------------------
    *
    * Here goes methods that perform actions on current Presupuesto.
    *
    */

    /**
     * Deletes one item from current Presupuesto
     *
     * @param integer $index
     * @return bool
     *
     */
    public function deletePresupuestoItem(int $index) {

      if(is_int($index)) {

        array_splice($_SESSION['conceptos'], $index-1, 1);

        return true;

      } else {

        return false;

      }
    }

    /**
     * Adds one item to current Presupuesto
     *
     * @return void
     *
     */
    public function addPresupuestoItem() {

        $modelBase = new ModelBase();

        $modelBase -> updateOneColumn('conceptos', $this -> cantidad, $this -> id);

        if(empty($_SESSION['conceptos'])) {
            $_SESSION['conceptos'] = [];
        }

        $concepto = $modelBase -> getOne('conceptos', $this -> id);

        $_SESSION['conceptos'][] = $concepto;

        $total = 0;

        $document = <<<EOL
        <!-- This file is automatically generated by Presupuestos engine to be converted into PDF -->

        <page backtop="20mm" backleft="5mm" backright="15mm" footer="date">
            <page_header>
                <h1 style="text-align: center">Cotización</h1>
            </page_header>
            <table>
                <tr>
                    <th style="text-align: center; padding-top: 3mm; padding-bottom: 3mm">Id</th>
                    <th style="text-align: center; padding-top: 3mm; padding-bottom: 3mm">Descripción</th>
                    <th style="text-align: center; padding-top: 3mm; padding-bottom: 3mm">Unidad</th>
                    <th style="text-align: center; padding-top: 3mm; padding-bottom: 3mm">Cantidad</th>
                    <th style="text-align: center; padding-top: 3mm; padding-bottom: 3mm">P. Unitario</th>
                    <th style="text-align: center; padding-top: 3mm; padding-bottom: 3mm">Importe</th>
                </tr>
                \n
EOL;
                $i = 0;
                $total = 0;
                foreach($_SESSION['conceptos'] as $item) {
                    $i++;
                    $document .= <<<EOL
                    <tr>
                        <th style="text-align: center; width: 20mm">$i</th>
EOL;
                    $document .= <<<EOL

                        <td style="text-align: justify; width: 80mm; padding-top: 5mm; padding-bottom: 5mm">{$item -> descripcion}</td>
                        <td style="text-align: center; width: 20mm; padding-top: 5mm; padding-bottom: 5mm">{$item -> unidad_medida}</td>
                        <td style="text-align: center; width: 20mm; padding-top: 5mm; padding-bottom: 5mm">{$item -> cantidad}</td>
                        <td style="text-align: center; width: 20mm; padding-top: 5mm; padding-bottom: 5mm">$\040{$item -> precio_unitario}</td>
EOL;
                    $importe = $item -> cantidad * $item -> precio_unitario;
                    $total += $importe;
                    $document .= <<<EOL
                        <td style="text-align: center">$\040$importe</td>
                   </tr>
                   \n
EOL;
               }
//                $document .= <<<EOL
//                <tr>
//                     <td>$total</td>
//                </tr>
// EOL;
               $document .= "
            </table>
        </page>
        ";

        $newDocument = fopen('views/concepto/presupuesto_output.html', 'w');
        fwrite($newDocument, $document);
        fclose($newDocument);

    }

    /**
    * --------------------------------------------------------------------------
    * DATABASE OPERATIONS
    * --------------------------------------------------------------------------
    *
    * This section holds those methods that perform operations directly on
    * database
    *
    */

    /**
     * Saves a record in database
     *
     * @return bool
     *
     */
    public function save() {

      $sql = "INSERT INTO conceptos VALUES(NULL, '{$this -> getFamilia()}',
                                                 '{$this -> getDescripcion()}',
                                                 '{$this -> getUnidad()}',
                                                 '{$this -> getPrecioUnitario()}',
                                                 '{$this -> getCantidad()}')";

      $query = $this -> db -> query($sql);

      return $query;

    }



  }
